SET
VACUUM
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=598.07..598.07 rows=1 width=0)
   ->  Merge Join  (cost=0.00..573.21 rows=9943 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9943 width=4)
               Filter: (b > 1)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=484.89..484.89 rows=1 width=0)
   ->  Hash Join  (cost=195.81..478.07 rows=2726 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2726 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2726 width=4)
                     Filter: (b < 798)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=499.56..499.56 rows=1 width=0)
   ->  Merge Join  (cost=0.00..491.12 rows=3375 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=3375 width=4)
               Filter: (b < 1197)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=548.30..548.30 rows=1 width=0)
   ->  Merge Join  (cost=0.00..531.74 rows=6625 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=6625 width=4)
               Filter: (b > 1198)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=515.01..515.01 rows=1 width=0)
   ->  Merge Join  (cost=0.00..504.00 rows=4404 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=4404 width=4)
               Filter: (b < 1995)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=532.86..532.86 rows=1 width=0)
   ->  Merge Join  (cost=0.00..518.86 rows=5596 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=5596 width=4)
               Filter: (b > 1996)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=526.37..526.37 rows=1 width=0)
   ->  Merge Join  (cost=0.00..513.46 rows=5164 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=5164 width=4)
               Filter: (b > 2395)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=519.99..519.99 rows=1 width=0)
   ->  Merge Join  (cost=0.00..508.15 rows=4736 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=4736 width=4)
               Filter: (b > 2794)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=540.44..540.44 rows=1 width=0)
   ->  Merge Join  (cost=0.00..525.18 rows=6101 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=6101 width=4)
               Filter: (b < 3591)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=507.43..507.43 rows=1 width=0)
   ->  Merge Join  (cost=0.00..497.68 rows=3899 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=3899 width=4)
               Filter: (b > 3592)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=545.02..545.02 rows=1 width=0)
   ->  Merge Join  (cost=0.00..529.00 rows=6406 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=6406 width=4)
               Filter: (b < 3993)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=502.85..502.85 rows=1 width=0)
   ->  Merge Join  (cost=0.00..493.86 rows=3594 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=3594 width=4)
               Filter: (b > 3994)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=549.53..549.53 rows=1 width=0)
   ->  Merge Join  (cost=0.00..532.76 rows=6707 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=6707 width=4)
               Filter: (b < 4393)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=488.93..488.93 rows=1 width=0)
   ->  Hash Join  (cost=196.49..481.44 rows=2995 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2995 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2995 width=4)
                     Filter: (b > 4792)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=558.21..558.21 rows=1 width=0)
   ->  Merge Join  (cost=0.00..539.99 rows=7285 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=7285 width=4)
               Filter: (b < 5191)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=480.66..480.66 rows=1 width=0)
   ->  Hash Join  (cost=195.11..474.55 rows=2444 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2444 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2444 width=4)
                     Filter: (b > 5590)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=566.34..566.34 rows=1 width=0)
   ->  Merge Join  (cost=0.00..546.77 rows=7829 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=7829 width=4)
               Filter: (b < 5989)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=447.59..447.59 rows=1 width=0)
   ->  Hash Join  (cost=193.76..442.82 rows=1906 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1906 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1906 width=4)
                     Filter: (b > 6388)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=573.86..573.86 rows=1 width=0)
   ->  Merge Join  (cost=0.00..553.04 rows=8330 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8330 width=4)
               Filter: (b < 6787)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=440.54..440.54 rows=1 width=0)
   ->  Hash Join  (cost=192.59..436.95 rows=1436 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1436 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1436 width=4)
                     Filter: (b > 7186)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=580.92..580.92 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.91 rows=8800 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8800 width=4)
               Filter: (b < 7585)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=408.51..408.51 rows=1 width=0)
   ->  Hash Join  (cost=191.42..406.09 rows=967 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=967 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=967 width=4)
                     Filter: (b > 7984)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=587.33..587.33 rows=1 width=0)
   ->  Merge Join  (cost=0.00..564.26 rows=9227 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9227 width=4)
               Filter: (b < 8383)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=402.73..402.73 rows=1 width=0)
   ->  Hash Join  (cost=190.46..401.27 rows=582 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=582 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=582 width=4)
                     Filter: (b > 8782)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=593.09..593.09 rows=1 width=0)
   ->  Merge Join  (cost=0.00..569.06 rows=9611 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9611 width=4)
               Filter: (b < 9181)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=396.96..396.96 rows=1 width=0)
   ->  Hash Join  (cost=189.49..396.46 rows=197 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=197 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=197 width=4)
                     Filter: (b > 9580)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=598.87..598.87 rows=1 width=0)
   ->  Merge Join  (cost=0.00..573.87 rows=9996 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9996 width=4)
               Filter: (b < 9979)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=598.93..598.93 rows=1 width=0)
   ->  Merge Join  (cost=0.00..573.92 rows=10000 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=10000 width=4)
               Filter: (c > 1)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=396.82..396.82 rows=1 width=0)
   ->  Hash Join  (cost=189.47..396.35 rows=188 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=188 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=188 width=4)
                     Filter: (c < 21)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=593.31..593.31 rows=1 width=0)
   ->  Merge Join  (cost=0.00..569.25 rows=9626 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9626 width=4)
               Filter: (c > 41)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=402.43..402.43 rows=1 width=0)
   ->  Hash Join  (cost=190.41..401.02 rows=562 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=562 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=562 width=4)
                     Filter: (c < 61)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=587.34..587.34 rows=1 width=0)
   ->  Merge Join  (cost=0.00..564.27 rows=9228 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9228 width=4)
               Filter: (c > 81)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=433.94..433.94 rows=1 width=0)
   ->  Hash Join  (cost=191.49..431.45 rows=996 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=996 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=996 width=4)
                     Filter: (c < 101)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=580.63..580.63 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.68 rows=8781 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8781 width=4)
               Filter: (c > 121)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=442.01..442.01 rows=1 width=0)
   ->  Hash Join  (cost=192.84..438.18 rows=1534 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1534 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1534 width=4)
                     Filter: (c < 141)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=570.97..570.97 rows=1 width=0)
   ->  Merge Join  (cost=0.00..550.62 rows=8137 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8137 width=4)
               Filter: (c > 161)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=478.16..478.16 rows=1 width=0)
   ->  Hash Join  (cost=194.69..472.46 rows=2277 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2277 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2277 width=4)
                     Filter: (c < 181)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=557.31..557.31 rows=1 width=0)
   ->  Merge Join  (cost=0.00..539.24 rows=7225 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=7225 width=4)
               Filter: (c > 201)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=502.79..502.79 rows=1 width=0)
   ->  Merge Join  (cost=0.00..493.81 rows=3590 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=3590 width=4)
               Filter: (c < 221)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=525.83..525.83 rows=1 width=0)
   ->  Merge Join  (cost=0.00..513.01 rows=5128 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=5128 width=4)
               Filter: (c > 241)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=580.56..580.56 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.61 rows=8776 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8776 width=4)
               Filter: (c < 261)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=435.65..435.65 rows=1 width=0)
   ->  Hash Join  (cost=191.78..432.88 rows=1110 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1110 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1110 width=4)
                     Filter: (c > 281)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=584.01..584.01 rows=1 width=0)
   ->  Merge Join  (cost=0.00..561.49 rows=9006 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9006 width=4)
               Filter: (c < 301)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=407.20..407.20 rows=1 width=0)
   ->  Hash Join  (cost=191.20..405.00 rows=880 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=880 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=880 width=4)
                     Filter: (c > 321)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=587.46..587.46 rows=1 width=0)
   ->  Merge Join  (cost=0.00..564.37 rows=9236 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9236 width=4)
               Filter: (c < 341)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=403.75..403.75 rows=1 width=0)
   ->  Hash Join  (cost=190.62..402.12 rows=650 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=650 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=650 width=4)
                     Filter: (c > 361)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=590.64..590.64 rows=1 width=0)
   ->  Merge Join  (cost=0.00..567.02 rows=9448 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9448 width=4)
               Filter: (c < 381)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=400.90..400.90 rows=1 width=0)
   ->  Hash Join  (cost=190.15..399.75 rows=460 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=460 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=460 width=4)
                     Filter: (c > 401)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=593.43..593.43 rows=1 width=0)
   ->  Merge Join  (cost=0.00..569.35 rows=9634 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9634 width=4)
               Filter: (c < 421)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=398.11..398.11 rows=1 width=0)
   ->  Hash Join  (cost=189.69..397.43 rows=274 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=274 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=274 width=4)
                     Filter: (c > 441)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=596.21..596.21 rows=1 width=0)
   ->  Merge Join  (cost=0.00..571.66 rows=9819 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9819 width=4)
               Filter: (c < 461)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                               
------------------------------------------------------------------------
 Aggregate  (cost=395.34..395.34 rows=1 width=0)
   ->  Hash Join  (cost=189.22..395.11 rows=89 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=89 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=89 width=4)
                     Filter: (c > 481)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=598.93..598.93 rows=1 width=0)
   ->  Merge Join  (cost=0.00..573.92 rows=10000 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=10000 width=4)
               Filter: (d > 19)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=592.92..592.92 rows=1 width=0)
   ->  Merge Join  (cost=0.00..568.92 rows=9600 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9600 width=4)
               Filter: (d > 28)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=402.67..402.67 rows=1 width=0)
   ->  Hash Join  (cost=190.44..401.23 rows=578 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=578 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=578 width=4)
                     Filter: (d < 32)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=587.60..587.60 rows=1 width=0)
   ->  Merge Join  (cost=0.00..564.48 rows=9245 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9245 width=4)
               Filter: (d > 36)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=408.58..408.58 rows=1 width=0)
   ->  Hash Join  (cost=191.43..406.15 rows=972 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=972 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=972 width=4)
                     Filter: (d < 40)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=580.92..580.92 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.91 rows=8800 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8800 width=4)
               Filter: (d > 44)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=441.82..441.82 rows=1 width=0)
   ->  Hash Join  (cost=192.80..438.01 rows=1521 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1521 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1521 width=4)
                     Filter: (d < 48)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=571.31..571.31 rows=1 width=0)
   ->  Merge Join  (cost=0.00..550.91 rows=8160 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8160 width=4)
               Filter: (d > 52)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=478.01..478.01 rows=1 width=0)
   ->  Hash Join  (cost=194.67..472.34 rows=2267 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2267 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2267 width=4)
                     Filter: (d < 56)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=559.49..559.49 rows=1 width=0)
   ->  Merge Join  (cost=0.00..541.06 rows=7370 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=7370 width=4)
               Filter: (d > 60)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=499.44..499.44 rows=1 width=0)
   ->  Merge Join  (cost=0.00..491.02 rows=3367 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=3367 width=4)
               Filter: (d < 64)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=510.74..510.74 rows=1 width=0)
   ->  Merge Join  (cost=0.00..500.44 rows=4120 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=4120 width=4)
               Filter: (d > 68)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=580.92..580.92 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.91 rows=8800 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8800 width=4)
               Filter: (d < 72)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=410.29..410.29 rows=1 width=0)
   ->  Hash Join  (cost=191.72..407.58 rows=1086 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1086 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1086 width=4)
                     Filter: (d > 76)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=584.35..584.35 rows=1 width=0)
   ->  Merge Join  (cost=0.00..561.78 rows=9029 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9029 width=4)
               Filter: (d < 80)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=406.87..406.87 rows=1 width=0)
   ->  Hash Join  (cost=191.15..404.73 rows=858 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=858 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=858 width=4)
                     Filter: (d > 84)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=587.73..587.73 rows=1 width=0)
   ->  Merge Join  (cost=0.00..564.59 rows=9254 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9254 width=4)
               Filter: (d < 88)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=403.62..403.62 rows=1 width=0)
   ->  Hash Join  (cost=190.60..402.01 rows=641 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=641 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=641 width=4)
                     Filter: (d > 92)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=590.93..590.93 rows=1 width=0)
   ->  Merge Join  (cost=0.00..567.26 rows=9467 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9467 width=4)
               Filter: (d < 96)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=400.41..400.41 rows=1 width=0)
   ->  Hash Join  (cost=190.07..399.34 rows=427 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=427 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=427 width=4)
                     Filter: (d > 100)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=593.88..593.88 rows=1 width=0)
   ->  Merge Join  (cost=0.00..569.72 rows=9664 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9664 width=4)
               Filter: (d < 104)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=397.80..397.80 rows=1 width=0)
   ->  Hash Join  (cost=189.63..397.16 rows=253 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=253 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=253 width=4)
                     Filter: (d > 108)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=596.41..596.41 rows=1 width=0)
   ->  Merge Join  (cost=0.00..571.82 rows=9832 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9832 width=4)
               Filter: (d < 112)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                               
------------------------------------------------------------------------
 Aggregate  (cost=395.28..395.28 rows=1 width=0)
   ->  Hash Join  (cost=189.21..395.06 rows=85 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=85 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=85 width=4)
                     Filter: (d > 116)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=598.93..598.93 rows=1 width=0)
   ->  Merge Join  (cost=0.00..573.93 rows=10000 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=10000 width=4)
               Filter: (a > 20)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=480.06..480.06 rows=1 width=0)
   ->  Hash Join  (cost=186.01..474.05 rows=2404 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=2404 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=2404 width=4)
                     Filter: (a < 25)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=544.78..544.78 rows=1 width=0)
   ->  Merge Join  (cost=0.00..528.81 rows=6390 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=6390 width=4)
               Filter: (a > 29)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=516.28..516.28 rows=1 width=0)
   ->  Merge Join  (cost=0.00..505.06 rows=4490 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=4490 width=4)
               Filter: (a < 33)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=524.41..524.41 rows=1 width=0)
   ->  Merge Join  (cost=0.00..511.83 rows=5032 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=5032 width=4)
               Filter: (a > 37)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=530.05..530.05 rows=1 width=0)
   ->  Merge Join  (cost=0.00..516.53 rows=5408 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=5408 width=4)
               Filter: (a < 41)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=511.83..511.83 rows=1 width=0)
   ->  Merge Join  (cost=0.00..501.34 rows=4193 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=4193 width=4)
               Filter: (a > 45)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=542.04..542.04 rows=1 width=0)
   ->  Merge Join  (cost=0.00..526.52 rows=6207 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=6207 width=4)
               Filter: (a < 49)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=500.61..500.61 rows=1 width=0)
   ->  Merge Join  (cost=0.00..491.99 rows=3445 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=3445 width=4)
               Filter: (a > 53)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=551.77..551.77 rows=1 width=0)
   ->  Merge Join  (cost=0.00..534.63 rows=6856 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=6856 width=4)
               Filter: (a < 57)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=486.93..486.93 rows=1 width=0)
   ->  Hash Join  (cost=187.16..479.77 rows=2862 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=2862 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=2862 width=4)
                     Filter: (a > 61)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=560.01..560.01 rows=1 width=0)
   ->  Merge Join  (cost=0.00..541.49 rows=7405 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=7405 width=4)
               Filter: (a < 65)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=479.13..479.13 rows=1 width=0)
   ->  Hash Join  (cost=185.85..473.27 rows=2342 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=2342 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=2342 width=4)
                     Filter: (a > 69)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=567.09..567.09 rows=1 width=0)
   ->  Merge Join  (cost=0.00..547.39 rows=7877 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=7877 width=4)
               Filter: (a < 73)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=447.59..447.59 rows=1 width=0)
   ->  Hash Join  (cost=184.76..442.82 rows=1906 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=1906 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=1906 width=4)
                     Filter: (a > 77)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=573.48..573.48 rows=1 width=0)
   ->  Merge Join  (cost=0.00..552.72 rows=8303 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=8303 width=4)
               Filter: (a < 81)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=441.47..441.47 rows=1 width=0)
   ->  Hash Join  (cost=183.75..437.73 rows=1498 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=1498 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=1498 width=4)
                     Filter: (a > 85)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=579.48..579.48 rows=1 width=0)
   ->  Merge Join  (cost=0.00..557.72 rows=8703 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=8703 width=4)
               Filter: (a < 89)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=435.70..435.70 rows=1 width=0)
   ->  Hash Join  (cost=182.78..432.91 rows=1113 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=1113 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=1113 width=4)
                     Filter: (a > 93)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=584.82..584.82 rows=1 width=0)
   ->  Merge Join  (cost=0.00..562.17 rows=9059 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=9059 width=4)
               Filter: (a < 97)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=405.57..405.57 rows=1 width=0)
   ->  Hash Join  (cost=181.93..403.64 rows=771 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=771 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=771 width=4)
                     Filter: (a > 101)
(7 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=402.99..402.99 rows=1 width=0)
   ->  Hash Join  (cost=181.50..401.49 rows=599 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=599 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=599 width=4)
                     Filter: (a > 105)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=592.35..592.35 rows=1 width=0)
   ->  Merge Join  (cost=0.00..568.44 rows=9561 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=9561 width=4)
               Filter: (a < 109)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=398.20..398.20 rows=1 width=0)
   ->  Hash Join  (cost=180.70..397.50 rows=280 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=280 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=280 width=4)
                     Filter: (a > 113)
(7 rows)

