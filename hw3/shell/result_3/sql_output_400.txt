SET
VACUUM
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=598.07..598.07 rows=1 width=0)
   ->  Merge Join  (cost=0.00..573.23 rows=9938 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9938 width=4)
               Filter: (b > 1)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=486.30..486.30 rows=1 width=0)
   ->  Hash Join  (cost=196.05..479.25 rows=2820 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2820 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2820 width=4)
                     Filter: (b < 798)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=501.07..501.07 rows=1 width=0)
   ->  Merge Join  (cost=0.00..492.39 rows=3471 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=3471 width=4)
               Filter: (b < 1197)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=546.94..546.94 rows=1 width=0)
   ->  Merge Join  (cost=0.00..530.61 rows=6529 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=6529 width=4)
               Filter: (b > 1198)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=516.10..516.10 rows=1 width=0)
   ->  Merge Join  (cost=0.00..504.91 rows=4473 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=4473 width=4)
               Filter: (b < 1995)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=531.91..531.91 rows=1 width=0)
   ->  Merge Join  (cost=0.00..518.09 rows=5527 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=5527 width=4)
               Filter: (b > 1996)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=525.14..525.14 rows=1 width=0)
   ->  Merge Join  (cost=0.00..512.45 rows=5076 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=5076 width=4)
               Filter: (b > 2395)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=519.19..519.19 rows=1 width=0)
   ->  Merge Join  (cost=0.00..507.49 rows=4679 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=4679 width=4)
               Filter: (b > 2794)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=540.01..540.01 rows=1 width=0)
   ->  Merge Join  (cost=0.00..524.84 rows=6067 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=6067 width=4)
               Filter: (b < 3591)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=508.00..508.00 rows=1 width=0)
   ->  Merge Join  (cost=0.00..498.16 rows=3933 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=3933 width=4)
               Filter: (b > 3592)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=545.02..545.02 rows=1 width=0)
   ->  Merge Join  (cost=0.00..529.01 rows=6401 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=6401 width=4)
               Filter: (b < 3993)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=502.99..502.99 rows=1 width=0)
   ->  Merge Join  (cost=0.00..493.99 rows=3599 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=3599 width=4)
               Filter: (b > 3994)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=549.43..549.43 rows=1 width=0)
   ->  Merge Join  (cost=0.00..532.69 rows=6695 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=6695 width=4)
               Filter: (b < 4393)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=489.38..489.38 rows=1 width=0)
   ->  Hash Join  (cost=196.56..481.81 rows=3025 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=3025 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=3025 width=4)
                     Filter: (b > 4792)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=557.47..557.47 rows=1 width=0)
   ->  Merge Join  (cost=0.00..539.39 rows=7231 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=7231 width=4)
               Filter: (b < 5191)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=481.10..481.10 rows=1 width=0)
   ->  Hash Join  (cost=195.18..474.91 rows=2473 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2473 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2473 width=4)
                     Filter: (b > 5590)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=565.60..565.60 rows=1 width=0)
   ->  Merge Join  (cost=0.00..546.16 rows=7773 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=7773 width=4)
               Filter: (b < 5989)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=448.64..448.64 rows=1 width=0)
   ->  Hash Join  (cost=193.94..443.70 rows=1976 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1976 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1976 width=4)
                     Filter: (b > 6388)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=573.02..573.02 rows=1 width=0)
   ->  Merge Join  (cost=0.00..552.35 rows=8268 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8268 width=4)
               Filter: (b < 6787)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=441.74..441.74 rows=1 width=0)
   ->  Hash Join  (cost=192.79..437.95 rows=1516 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1516 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1516 width=4)
                     Filter: (b > 7186)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=580.12..580.12 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.26 rows=8741 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8741 width=4)
               Filter: (b < 7585)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=409.56..409.56 rows=1 width=0)
   ->  Hash Join  (cost=191.59..406.96 rows=1037 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1037 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1037 width=4)
                     Filter: (b > 7984)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=586.66..586.66 rows=1 width=0)
   ->  Merge Join  (cost=0.00..563.71 rows=9177 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9177 width=4)
               Filter: (b < 8383)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=403.33..403.33 rows=1 width=0)
   ->  Hash Join  (cost=190.56..401.77 rows=622 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=622 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=622 width=4)
                     Filter: (b > 8782)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=592.97..592.97 rows=1 width=0)
   ->  Merge Join  (cost=0.00..568.98 rows=9598 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9598 width=4)
               Filter: (b < 9181)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=397.36..397.36 rows=1 width=0)
   ->  Hash Join  (cost=189.56..396.80 rows=224 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=224 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=224 width=4)
                     Filter: (b > 9580)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=598.78..598.78 rows=1 width=0)
   ->  Merge Join  (cost=0.00..573.81 rows=9985 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9985 width=4)
               Filter: (b < 9979)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=599.00..599.00 rows=1 width=0)
   ->  Merge Join  (cost=0.00..574.00 rows=10000 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=10000 width=4)
               Filter: (c > 1)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=396.33..396.33 rows=1 width=0)
   ->  Hash Join  (cost=189.39..395.94 rows=155 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=155 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=155 width=4)
                     Filter: (c < 21)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=594.11..594.11 rows=1 width=0)
   ->  Merge Join  (cost=0.00..569.92 rows=9674 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9674 width=4)
               Filter: (c > 41)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=401.73..401.73 rows=1 width=0)
   ->  Hash Join  (cost=190.29..400.44 rows=515 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=515 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=515 width=4)
                     Filter: (c < 61)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=588.59..588.59 rows=1 width=0)
   ->  Merge Join  (cost=0.00..565.33 rows=9306 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9306 width=4)
               Filter: (c > 81)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=407.91..407.91 rows=1 width=0)
   ->  Hash Join  (cost=191.32..405.59 rows=927 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=927 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=927 width=4)
                     Filter: (c < 101)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=581.51..581.51 rows=1 width=0)
   ->  Merge Join  (cost=0.00..559.42 rows=8834 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8834 width=4)
               Filter: (c > 121)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=440.77..440.77 rows=1 width=0)
   ->  Hash Join  (cost=192.63..437.14 rows=1451 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1451 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1451 width=4)
                     Filter: (c < 141)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=572.08..572.08 rows=1 width=0)
   ->  Merge Join  (cost=0.00..551.56 rows=8205 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8205 width=4)
               Filter: (c > 161)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=451.69..451.69 rows=1 width=0)
   ->  Hash Join  (cost=194.45..446.24 rows=2179 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2179 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2179 width=4)
                     Filter: (c < 181)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=557.93..557.93 rows=1 width=0)
   ->  Merge Join  (cost=0.00..539.77 rows=7262 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=7262 width=4)
               Filter: (c > 201)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=501.62..501.62 rows=1 width=0)
   ->  Merge Join  (cost=0.00..492.85 rows=3508 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=3508 width=4)
               Filter: (c < 221)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=519.70..519.70 rows=1 width=0)
   ->  Merge Join  (cost=0.00..507.91 rows=4713 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=4713 width=4)
               Filter: (c > 241)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=580.48..580.48 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.56 rows=8765 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8765 width=4)
               Filter: (c < 261)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=435.49..435.49 rows=1 width=0)
   ->  Hash Join  (cost=191.75..432.74 rows=1099 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1099 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1099 width=4)
                     Filter: (c > 281)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=584.33..584.33 rows=1 width=0)
   ->  Merge Join  (cost=0.00..561.77 rows=9022 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9022 width=4)
               Filter: (c < 301)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=406.89..406.89 rows=1 width=0)
   ->  Hash Join  (cost=191.15..404.74 rows=859 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=859 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=859 width=4)
                     Filter: (c > 321)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=587.95..587.95 rows=1 width=0)
   ->  Merge Join  (cost=0.00..564.79 rows=9263 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9263 width=4)
               Filter: (c < 341)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=403.53..403.53 rows=1 width=0)
   ->  Hash Join  (cost=190.59..401.94 rows=635 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=635 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=635 width=4)
                     Filter: (c > 361)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=591.20..591.20 rows=1 width=0)
   ->  Merge Join  (cost=0.00..567.50 rows=9480 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9480 width=4)
               Filter: (c < 381)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=400.57..400.57 rows=1 width=0)
   ->  Hash Join  (cost=190.09..399.48 rows=438 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=438 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=438 width=4)
                     Filter: (c > 401)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=593.74..593.74 rows=1 width=0)
   ->  Merge Join  (cost=0.00..569.61 rows=9649 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9649 width=4)
               Filter: (c < 421)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=397.87..397.87 rows=1 width=0)
   ->  Hash Join  (cost=189.65..397.23 rows=258 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=258 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=258 width=4)
                     Filter: (c > 441)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=596.38..596.38 rows=1 width=0)
   ->  Merge Join  (cost=0.00..571.81 rows=9825 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9825 width=4)
               Filter: (c < 461)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                               
------------------------------------------------------------------------
 Aggregate  (cost=395.29..395.29 rows=1 width=0)
   ->  Hash Join  (cost=189.22..395.08 rows=86 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=86 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=86 width=4)
                     Filter: (c > 481)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=599.00..599.00 rows=1 width=0)
   ->  Merge Join  (cost=0.00..574.00 rows=10000 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=10000 width=4)
               Filter: (d > 19)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=593.65..593.65 rows=1 width=0)
   ->  Merge Join  (cost=0.00..569.54 rows=9643 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9643 width=4)
               Filter: (d > 28)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=401.56..401.56 rows=1 width=0)
   ->  Hash Join  (cost=190.26..400.30 rows=504 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=504 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=504 width=4)
                     Filter: (d < 32)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=588.08..588.08 rows=1 width=0)
   ->  Merge Join  (cost=0.00..564.90 rows=9272 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9272 width=4)
               Filter: (d > 36)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=407.59..407.59 rows=1 width=0)
   ->  Hash Join  (cost=191.26..405.32 rows=906 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=906 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=906 width=4)
                     Filter: (d < 40)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=580.96..580.96 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.96 rows=8797 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8797 width=4)
               Filter: (d > 44)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=440.50..440.50 rows=1 width=0)
   ->  Hash Join  (cost=192.58..436.91 rows=1433 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1433 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1433 width=4)
                     Filter: (d < 48)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=571.24..571.24 rows=1 width=0)
   ->  Merge Join  (cost=0.00..550.86 rows=8149 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8149 width=4)
               Filter: (d > 52)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=451.18..451.18 rows=1 width=0)
   ->  Hash Join  (cost=194.36..445.81 rows=2145 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2145 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2145 width=4)
                     Filter: (d < 56)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=556.43..556.43 rows=1 width=0)
   ->  Merge Join  (cost=0.00..538.52 rows=7162 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=7162 width=4)
               Filter: (d > 60)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=500.96..500.96 rows=1 width=0)
   ->  Merge Join  (cost=0.00..492.30 rows=3464 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=3464 width=4)
               Filter: (d < 64)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=510.35..510.35 rows=1 width=0)
   ->  Merge Join  (cost=0.00..500.12 rows=4090 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=4090 width=4)
               Filter: (d > 68)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=580.33..580.33 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.44 rows=8755 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=8755 width=4)
               Filter: (d < 72)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=410.16..410.16 rows=1 width=0)
   ->  Hash Join  (cost=191.69..407.46 rows=1077 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1077 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1077 width=4)
                     Filter: (d > 76)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=584.24..584.24 rows=1 width=0)
   ->  Merge Join  (cost=0.00..561.70 rows=9016 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9016 width=4)
               Filter: (d < 80)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=431.54..431.54 rows=1 width=0)
   ->  Hash Join  (cost=191.09..429.45 rows=836 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=836 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=836 width=4)
                     Filter: (d > 84)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=587.78..587.78 rows=1 width=0)
   ->  Merge Join  (cost=0.00..564.65 rows=9252 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9252 width=4)
               Filter: (d < 88)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=403.18..403.18 rows=1 width=0)
   ->  Hash Join  (cost=190.53..401.65 rows=612 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=612 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=612 width=4)
                     Filter: (d > 92)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=591.17..591.17 rows=1 width=0)
   ->  Merge Join  (cost=0.00..567.48 rows=9478 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9478 width=4)
               Filter: (d < 96)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=400.51..400.51 rows=1 width=0)
   ->  Hash Join  (cost=190.09..399.43 rows=434 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=434 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=434 width=4)
                     Filter: (d > 100)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=593.59..593.59 rows=1 width=0)
   ->  Merge Join  (cost=0.00..569.49 rows=9639 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9639 width=4)
               Filter: (d < 104)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=397.86..397.86 rows=1 width=0)
   ->  Hash Join  (cost=189.64..397.21 rows=257 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=257 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=257 width=4)
                     Filter: (d > 108)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=596.41..596.41 rows=1 width=0)
   ->  Merge Join  (cost=0.00..571.84 rows=9827 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..229.00 rows=9827 width=4)
               Filter: (d < 112)
         ->  Index Scan using two_id_idx on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=301.13..301.13 rows=1 width=0)
   ->  Nested Loop  (cost=0.00..301.00 rows=51 width=0)
         ->  Index Scan using one_d_idx on one  (cost=0.00..146.67 rows=51 width=4)
               Index Cond: (d > 116)
         ->  Index Scan using two_id_idx on two  (cost=0.00..3.01 rows=1 width=4)
               Index Cond: ("outer".id = two.id)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=599.00..599.00 rows=1 width=0)
   ->  Merge Join  (cost=0.00..574.00 rows=10000 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=10000 width=4)
               Filter: (a > 20)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=480.35..480.35 rows=1 width=0)
   ->  Hash Join  (cost=186.06..474.29 rows=2423 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=2423 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=2423 width=4)
                     Filter: (a < 25)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=542.75..542.75 rows=1 width=0)
   ->  Merge Join  (cost=0.00..527.12 rows=6250 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=6250 width=4)
               Filter: (a > 29)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=512.83..512.83 rows=1 width=0)
   ->  Merge Join  (cost=0.00..502.19 rows=4255 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=4255 width=4)
               Filter: (a < 33)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=524.18..524.18 rows=1 width=0)
   ->  Merge Join  (cost=0.00..511.65 rows=5012 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=5012 width=4)
               Filter: (a > 37)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=529.13..529.13 rows=1 width=0)
   ->  Merge Join  (cost=0.00..515.77 rows=5342 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=5342 width=4)
               Filter: (a < 41)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=510.71..510.71 rows=1 width=0)
   ->  Merge Join  (cost=0.00..500.43 rows=4114 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=4114 width=4)
               Filter: (a > 45)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=541.46..541.46 rows=1 width=0)
   ->  Merge Join  (cost=0.00..526.05 rows=6164 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=6164 width=4)
               Filter: (a < 49)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=499.87..499.87 rows=1 width=0)
   ->  Merge Join  (cost=0.00..491.39 rows=3391 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=3391 width=4)
               Filter: (a > 53)
(6 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=551.53..551.53 rows=1 width=0)
   ->  Merge Join  (cost=0.00..534.44 rows=6835 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=6835 width=4)
               Filter: (a < 57)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=486.44..486.44 rows=1 width=0)
   ->  Hash Join  (cost=187.07..479.36 rows=2829 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=2829 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=2829 width=4)
                     Filter: (a > 61)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=559.49..559.49 rows=1 width=0)
   ->  Merge Join  (cost=0.00..541.08 rows=7366 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=7366 width=4)
               Filter: (a < 65)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=478.89..478.89 rows=1 width=0)
   ->  Hash Join  (cost=185.81..473.07 rows=2326 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=2326 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=2326 width=4)
                     Filter: (a > 69)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=566.89..566.89 rows=1 width=0)
   ->  Merge Join  (cost=0.00..547.24 rows=7859 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=7859 width=4)
               Filter: (a < 73)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=447.07..447.07 rows=1 width=0)
   ->  Hash Join  (cost=184.68..442.39 rows=1871 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=1871 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=1871 width=4)
                     Filter: (a > 77)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=573.04..573.04 rows=1 width=0)
   ->  Merge Join  (cost=0.00..552.36 rows=8269 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=8269 width=4)
               Filter: (a < 81)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=440.87..440.87 rows=1 width=0)
   ->  Hash Join  (cost=183.65..437.23 rows=1458 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=1458 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=1458 width=4)
                     Filter: (a > 85)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=579.50..579.50 rows=1 width=0)
   ->  Merge Join  (cost=0.00..557.75 rows=8700 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=8700 width=4)
               Filter: (a < 89)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=410.32..410.32 rows=1 width=0)
   ->  Hash Join  (cost=182.72..407.60 rows=1088 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=1088 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=1088 width=4)
                     Filter: (a > 93)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=584.62..584.62 rows=1 width=0)
   ->  Merge Join  (cost=0.00..562.01 rows=9041 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=9041 width=4)
               Filter: (a < 97)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=405.33..405.33 rows=1 width=0)
   ->  Hash Join  (cost=181.89..403.44 rows=755 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=755 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=755 width=4)
                     Filter: (a > 101)
(7 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=402.69..402.69 rows=1 width=0)
   ->  Hash Join  (cost=181.45..401.24 rows=579 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=579 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=579 width=4)
                     Filter: (a > 105)
(7 rows)

                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Aggregate  (cost=592.24..592.24 rows=1 width=0)
   ->  Merge Join  (cost=0.00..568.36 rows=9549 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_id_idx on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_id_idx on two  (cost=0.00..220.00 rows=9549 width=4)
               Filter: (a < 109)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=398.11..398.11 rows=1 width=0)
   ->  Hash Join  (cost=180.69..397.43 rows=274 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=274 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=274 width=4)
                     Filter: (a > 113)
(7 rows)

