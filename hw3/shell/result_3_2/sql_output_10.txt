SET
VACUUM
                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=597.95..597.95 rows=1 width=0)
   ->  Merge Join  (cost=0.00..573.12 rows=9930 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9930 width=4)
               Filter: (b > 1)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=485.03..485.03 rows=1 width=0)
   ->  Hash Join  (cost=195.84..478.19 rows=2735 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2735 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2735 width=4)
                     Filter: (b < 798)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=499.88..499.88 rows=1 width=0)
   ->  Merge Join  (cost=0.00..491.40 rows=3392 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=3392 width=4)
               Filter: (b < 1197)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=548.12..548.12 rows=1 width=0)
   ->  Merge Join  (cost=0.00..531.60 rows=6608 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=6608 width=4)
               Filter: (b > 1198)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=515.23..515.23 rows=1 width=0)
   ->  Merge Join  (cost=0.00..504.19 rows=4415 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=4415 width=4)
               Filter: (b < 1995)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=532.78..532.78 rows=1 width=0)
   ->  Merge Join  (cost=0.00..518.81 rows=5585 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=5585 width=4)
               Filter: (b > 1996)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=526.46..526.46 rows=1 width=0)
   ->  Merge Join  (cost=0.00..513.55 rows=5164 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=5164 width=4)
               Filter: (b > 2395)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=520.25..520.25 rows=1 width=0)
   ->  Merge Join  (cost=0.00..508.38 rows=4750 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=4750 width=4)
               Filter: (b > 2794)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=539.45..539.45 rows=1 width=0)
   ->  Merge Join  (cost=0.00..524.38 rows=6030 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=6030 width=4)
               Filter: (b < 3591)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=508.55..508.55 rows=1 width=0)
   ->  Merge Join  (cost=0.00..498.62 rows=3970 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=3970 width=4)
               Filter: (b > 3592)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=544.10..544.10 rows=1 width=0)
   ->  Merge Join  (cost=0.00..528.25 rows=6340 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=6340 width=4)
               Filter: (b < 3993)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=503.90..503.90 rows=1 width=0)
   ->  Merge Join  (cost=0.00..494.75 rows=3660 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=3660 width=4)
               Filter: (b > 3994)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=548.35..548.35 rows=1 width=0)
   ->  Merge Join  (cost=0.00..531.79 rows=6623 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=6623 width=4)
               Filter: (b < 4393)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=490.44..490.44 rows=1 width=0)
   ->  Hash Join  (cost=196.74..482.70 rows=3096 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=3096 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=3096 width=4)
                     Filter: (b > 4792)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=556.69..556.69 rows=1 width=0)
   ->  Merge Join  (cost=0.00..538.74 rows=7179 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=7179 width=4)
               Filter: (b < 5191)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=482.48..482.48 rows=1 width=0)
   ->  Hash Join  (cost=195.41..476.06 rows=2565 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2565 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2565 width=4)
                     Filter: (b > 5590)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=564.38..564.38 rows=1 width=0)
   ->  Merge Join  (cost=0.00..545.15 rows=7692 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=7692 width=4)
               Filter: (b < 5989)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=449.78..449.78 rows=1 width=0)
   ->  Hash Join  (cost=194.13..444.65 rows=2052 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2052 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2052 width=4)
                     Filter: (b > 6388)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=572.06..572.06 rows=1 width=0)
   ->  Merge Join  (cost=0.00..551.55 rows=8204 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=8204 width=4)
               Filter: (b < 6787)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=442.16..442.16 rows=1 width=0)
   ->  Hash Join  (cost=192.86..438.30 rows=1544 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1544 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1544 width=4)
                     Filter: (b > 7186)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=579.65..579.65 rows=1 width=0)
   ->  Merge Join  (cost=0.00..557.88 rows=8710 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=8710 width=4)
               Filter: (b < 7585)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=409.57..409.57 rows=1 width=0)
   ->  Hash Join  (cost=191.59..406.98 rows=1038 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1038 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1038 width=4)
                     Filter: (b > 7984)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=586.70..586.70 rows=1 width=0)
   ->  Merge Join  (cost=0.00..563.75 rows=9180 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9180 width=4)
               Filter: (b < 8383)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=403.29..403.29 rows=1 width=0)
   ->  Hash Join  (cost=190.55..401.74 rows=619 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=619 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=619 width=4)
                     Filter: (b > 8782)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=592.78..592.78 rows=1 width=0)
   ->  Merge Join  (cost=0.00..568.81 rows=9585 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9585 width=4)
               Filter: (b < 9181)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=397.20..397.20 rows=1 width=0)
   ->  Hash Join  (cost=189.53..396.66 rows=213 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=213 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=213 width=4)
                     Filter: (b > 9580)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=598.85..598.85 rows=1 width=0)
   ->  Merge Join  (cost=0.00..573.88 rows=9990 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9990 width=4)
               Filter: (b < 9979)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=599.00..599.00 rows=1 width=0)
   ->  Merge Join  (cost=0.00..574.00 rows=10000 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=10000 width=4)
               Filter: (c > 1)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=396.76..396.76 rows=1 width=0)
   ->  Hash Join  (cost=189.46..396.30 rows=184 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=184 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=184 width=4)
                     Filter: (c < 21)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=593.51..593.51 rows=1 width=0)
   ->  Merge Join  (cost=0.00..569.42 rows=9634 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9634 width=4)
               Filter: (c > 41)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=402.25..402.25 rows=1 width=0)
   ->  Hash Join  (cost=190.38..400.88 rows=550 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=550 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=550 width=4)
                     Filter: (c < 61)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=587.60..587.60 rows=1 width=0)
   ->  Merge Join  (cost=0.00..564.50 rows=9240 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9240 width=4)
               Filter: (c > 81)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=408.93..408.93 rows=1 width=0)
   ->  Hash Join  (cost=191.49..406.44 rows=995 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=995 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=995 width=4)
                     Filter: (c < 101)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=580.58..580.58 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.65 rows=8772 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=8772 width=4)
               Filter: (c > 121)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=442.21..442.21 rows=1 width=0)
   ->  Hash Join  (cost=192.87..438.34 rows=1547 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1547 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1547 width=4)
                     Filter: (c < 141)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=570.82..570.82 rows=1 width=0)
   ->  Merge Join  (cost=0.00..550.51 rows=8121 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=8121 width=4)
               Filter: (c > 161)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=478.67..478.67 rows=1 width=0)
   ->  Hash Join  (cost=194.78..472.89 rows=2311 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2311 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2311 width=4)
                     Filter: (c < 181)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=556.78..556.78 rows=1 width=0)
   ->  Merge Join  (cost=0.00..538.81 rows=7185 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=7185 width=4)
               Filter: (c > 201)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=502.73..502.73 rows=1 width=0)
   ->  Merge Join  (cost=0.00..493.77 rows=3582 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=3582 width=4)
               Filter: (c < 221)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=525.10..525.10 rows=1 width=0)
   ->  Merge Join  (cost=0.00..512.41 rows=5073 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=5073 width=4)
               Filter: (c > 241)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=580.49..580.49 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.58 rows=8766 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=8766 width=4)
               Filter: (c < 261)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=435.77..435.77 rows=1 width=0)
   ->  Hash Join  (cost=191.79..432.98 rows=1118 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1118 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1118 width=4)
                     Filter: (c > 281)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=584.00..584.00 rows=1 width=0)
   ->  Merge Join  (cost=0.00..561.50 rows=9000 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9000 width=4)
               Filter: (c < 301)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=407.26..407.26 rows=1 width=0)
   ->  Hash Join  (cost=191.21..405.05 rows=884 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=884 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=884 width=4)
                     Filter: (c > 321)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=587.51..587.51 rows=1 width=0)
   ->  Merge Join  (cost=0.00..564.42 rows=9234 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9234 width=4)
               Filter: (c < 341)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=403.75..403.75 rows=1 width=0)
   ->  Hash Join  (cost=190.62..402.12 rows=650 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=650 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=650 width=4)
                     Filter: (c > 361)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=590.71..590.71 rows=1 width=0)
   ->  Merge Join  (cost=0.00..567.09 rows=9447 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9447 width=4)
               Filter: (c < 381)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=400.92..400.92 rows=1 width=0)
   ->  Hash Join  (cost=190.15..399.76 rows=461 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=461 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=461 width=4)
                     Filter: (c > 401)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=593.50..593.50 rows=1 width=0)
   ->  Merge Join  (cost=0.00..569.41 rows=9633 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9633 width=4)
               Filter: (c < 421)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=398.13..398.13 rows=1 width=0)
   ->  Hash Join  (cost=189.69..397.44 rows=275 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=275 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=275 width=4)
                     Filter: (c > 441)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=596.29..596.29 rows=1 width=0)
   ->  Merge Join  (cost=0.00..571.74 rows=9819 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9819 width=4)
               Filter: (c < 461)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                               
------------------------------------------------------------------------
 Aggregate  (cost=395.34..395.34 rows=1 width=0)
   ->  Hash Join  (cost=189.22..395.11 rows=89 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=89 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=89 width=4)
                     Filter: (c > 481)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=599.00..599.00 rows=1 width=0)
   ->  Merge Join  (cost=0.00..574.00 rows=10000 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=10000 width=4)
               Filter: (d > 19)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=592.91..592.91 rows=1 width=0)
   ->  Merge Join  (cost=0.00..568.92 rows=9594 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9594 width=4)
               Filter: (d > 28)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=402.81..402.81 rows=1 width=0)
   ->  Hash Join  (cost=190.47..401.34 rows=587 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=587 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=587 width=4)
                     Filter: (d < 32)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=587.50..587.50 rows=1 width=0)
   ->  Merge Join  (cost=0.00..564.41 rows=9233 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9233 width=4)
               Filter: (d > 36)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=408.81..408.81 rows=1 width=0)
   ->  Hash Join  (cost=191.47..406.34 rows=987 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=987 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=987 width=4)
                     Filter: (d < 40)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=580.73..580.73 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.77 rows=8782 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=8782 width=4)
               Filter: (d > 44)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=442.18..442.18 rows=1 width=0)
   ->  Hash Join  (cost=192.86..438.31 rows=1545 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1545 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1545 width=4)
                     Filter: (d < 48)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=570.05..570.05 rows=1 width=0)
   ->  Merge Join  (cost=0.00..549.88 rows=8070 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=8070 width=4)
               Filter: (d > 52)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=479.06..479.06 rows=1 width=0)
   ->  Hash Join  (cost=194.84..473.21 rows=2337 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=2337 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=2337 width=4)
                     Filter: (d < 56)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=559.12..559.12 rows=1 width=0)
   ->  Merge Join  (cost=0.00..540.76 rows=7341 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=7341 width=4)
               Filter: (d > 60)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=499.42..499.42 rows=1 width=0)
   ->  Merge Join  (cost=0.00..491.01 rows=3361 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=3361 width=4)
               Filter: (d < 64)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=509.62..509.62 rows=1 width=0)
   ->  Merge Join  (cost=0.00..499.51 rows=4041 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=4041 width=4)
               Filter: (d > 68)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=580.73..580.73 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.77 rows=8782 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=8782 width=4)
               Filter: (d < 72)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=435.41..435.41 rows=1 width=0)
   ->  Hash Join  (cost=191.74..432.68 rows=1094 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=1094 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=1094 width=4)
                     Filter: (d > 76)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=584.48..584.48 rows=1 width=0)
   ->  Merge Join  (cost=0.00..561.90 rows=9032 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9032 width=4)
               Filter: (d < 80)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=406.66..406.66 rows=1 width=0)
   ->  Hash Join  (cost=191.11..404.55 rows=844 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=844 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=844 width=4)
                     Filter: (d > 84)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=587.96..587.96 rows=1 width=0)
   ->  Merge Join  (cost=0.00..564.80 rows=9264 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9264 width=4)
               Filter: (d < 88)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=403.53..403.53 rows=1 width=0)
   ->  Hash Join  (cost=190.59..401.94 rows=635 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=635 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=635 width=4)
                     Filter: (d > 92)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=591.01..591.01 rows=1 width=0)
   ->  Merge Join  (cost=0.00..567.34 rows=9467 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9467 width=4)
               Filter: (d < 96)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=400.48..400.48 rows=1 width=0)
   ->  Hash Join  (cost=190.08..399.40 rows=432 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=432 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=432 width=4)
                     Filter: (d > 100)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=593.87..593.87 rows=1 width=0)
   ->  Merge Join  (cost=0.00..569.73 rows=9658 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9658 width=4)
               Filter: (d < 104)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=397.86..397.86 rows=1 width=0)
   ->  Hash Join  (cost=189.64..397.21 rows=257 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=257 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=257 width=4)
                     Filter: (d > 108)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=596.44..596.44 rows=1 width=0)
   ->  Merge Join  (cost=0.00..571.86 rows=9829 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..229.00 rows=9829 width=4)
               Filter: (d < 112)
         ->  Index Scan using two_pk on two  (cost=0.00..195.00 rows=10000 width=4)
(6 rows)

                               QUERY PLAN                               
------------------------------------------------------------------------
 Aggregate  (cost=395.29..395.29 rows=1 width=0)
   ->  Hash Join  (cost=189.22..395.08 rows=86 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on two  (cost=0.00..155.00 rows=10000 width=4)
         ->  Hash  (cost=189.00..189.00 rows=86 width=4)
               ->  Seq Scan on one  (cost=0.00..189.00 rows=86 width=4)
                     Filter: (d > 116)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=599.00..599.00 rows=1 width=0)
   ->  Merge Join  (cost=0.00..574.00 rows=10000 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=10000 width=4)
               Filter: (a > 20)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=478.86..478.86 rows=1 width=0)
   ->  Hash Join  (cost=185.81..473.05 rows=2324 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=2324 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=2324 width=4)
                     Filter: (a < 25)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=545.71..545.71 rows=1 width=0)
   ->  Merge Join  (cost=0.00..529.59 rows=6447 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=6447 width=4)
               Filter: (a > 29)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=514.27..514.27 rows=1 width=0)
   ->  Merge Join  (cost=0.00..503.39 rows=4351 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=4351 width=4)
               Filter: (a < 33)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=526.19..526.19 rows=1 width=0)
   ->  Merge Join  (cost=0.00..513.33 rows=5146 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=5146 width=4)
               Filter: (a > 37)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=530.00..530.00 rows=1 width=0)
   ->  Merge Join  (cost=0.00..516.50 rows=5400 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=5400 width=4)
               Filter: (a < 41)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=511.27..511.27 rows=1 width=0)
   ->  Merge Join  (cost=0.00..500.89 rows=4151 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=4151 width=4)
               Filter: (a > 45)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=541.94..541.94 rows=1 width=0)
   ->  Merge Join  (cost=0.00..526.45 rows=6196 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=6196 width=4)
               Filter: (a < 49)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=501.22..501.22 rows=1 width=0)
   ->  Merge Join  (cost=0.00..492.51 rows=3481 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=3481 width=4)
               Filter: (a > 53)
(6 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=551.35..551.35 rows=1 width=0)
   ->  Merge Join  (cost=0.00..534.29 rows=6823 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=6823 width=4)
               Filter: (a < 57)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=487.40..487.40 rows=1 width=0)
   ->  Hash Join  (cost=187.23..480.16 rows=2893 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=2893 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=2893 width=4)
                     Filter: (a > 61)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=559.66..559.66 rows=1 width=0)
   ->  Merge Join  (cost=0.00..541.21 rows=7377 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=7377 width=4)
               Filter: (a < 65)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=479.42..479.42 rows=1 width=0)
   ->  Hash Join  (cost=185.90..473.51 rows=2361 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=2361 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=2361 width=4)
                     Filter: (a > 69)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=567.23..567.23 rows=1 width=0)
   ->  Merge Join  (cost=0.00..547.52 rows=7882 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=7882 width=4)
               Filter: (a < 73)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=447.16..447.16 rows=1 width=0)
   ->  Hash Join  (cost=184.69..442.46 rows=1877 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=1877 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=1877 width=4)
                     Filter: (a > 77)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=574.04..574.04 rows=1 width=0)
   ->  Merge Join  (cost=0.00..553.20 rows=8336 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=8336 width=4)
               Filter: (a < 81)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=440.95..440.95 rows=1 width=0)
   ->  Hash Join  (cost=183.66..437.29 rows=1463 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=1463 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=1463 width=4)
                     Filter: (a > 85)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=580.09..580.09 rows=1 width=0)
   ->  Merge Join  (cost=0.00..558.24 rows=8739 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=8739 width=4)
               Filter: (a < 89)
(6 rows)

                                QUERY PLAN                                
--------------------------------------------------------------------------
 Aggregate  (cost=410.35..410.35 rows=1 width=0)
   ->  Hash Join  (cost=182.72..407.62 rows=1090 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=1090 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=1090 width=4)
                     Filter: (a > 93)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=585.08..585.08 rows=1 width=0)
   ->  Merge Join  (cost=0.00..562.40 rows=9072 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=9072 width=4)
               Filter: (a < 97)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=405.51..405.51 rows=1 width=0)
   ->  Hash Join  (cost=181.92..403.59 rows=767 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=767 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=767 width=4)
                     Filter: (a > 101)
(7 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=403.09..403.09 rows=1 width=0)
   ->  Hash Join  (cost=181.51..401.57 rows=606 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=606 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=606 width=4)
                     Filter: (a > 105)
(7 rows)

                                     QUERY PLAN                                     
------------------------------------------------------------------------------------
 Aggregate  (cost=592.36..592.36 rows=1 width=0)
   ->  Merge Join  (cost=0.00..568.46 rows=9557 width=0)
         Merge Cond: ("outer".id = "inner".id)
         ->  Index Scan using one_pk on one  (cost=0.00..204.00 rows=10000 width=4)
         ->  Index Scan using two_pk on two  (cost=0.00..220.00 rows=9557 width=4)
               Filter: (a < 109)
(6 rows)

                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=398.25..398.25 rows=1 width=0)
   ->  Hash Join  (cost=180.71..397.54 rows=283 width=0)
         Hash Cond: ("outer".id = "inner".id)
         ->  Seq Scan on one  (cost=0.00..164.00 rows=10000 width=4)
         ->  Hash  (cost=180.00..180.00 rows=283 width=4)
               ->  Seq Scan on two  (cost=0.00..180.00 rows=283 width=4)
                     Filter: (a > 113)
(7 rows)

